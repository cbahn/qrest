{% extends "menu_layout.jinja2" %}

{% block content %}
<main class="container">
  <section id="home">
    <h1 class="admin-interface-gradient">Admin Locations</h1>
    <table>
      <thead>
        <tr>
          <th style="padding-left:0px;">Name</th>
          <th>Actions</th>
          <th>Change Discovery Status</th>
        </tr>
      </thead>
      <tbody>
        {% for loc in locations %}
        <tr>
          <td style="padding-left:0px;">
            <img src="{{ url_for('static', filename='uploads/' ~ loc.imageFile) }}"
                 alt="{{ loc.fullName }} thumbnail"
                 style="width:40px; height:auto; margin-right:8px; vertical-align:middle;">
            <a href="{{ url_for('location_bp_x.location', loc_slug=loc.slug) }}">{{ loc.fullName }}</a>
          </td>
          <td>
            <!-- The delete button: note the data-delete-url attribute -->
            <button type="button"
                    class="secondary small-button delete-btn"
                    data-delete-url="{{ url_for('admin_bp_x.delete_location', loc_slug=loc.slug) }}">
              Delete
            </button>
          </td>
          <td>
          
          <details class="dropdown">
              <summary></summary>
              <ul>
                  <li><a href="#" class="change-status" data-status="undiscovered" data-loc-id="{{ loc.locationID }}">Undiscovered</a></li>
                  <li><a href="#" class="change-status" data-status="discovered" data-loc-id="{{ loc.locationID }}">Discovered</a></li>
                  <li><a href="#" class="change-status" data-status="solved" data-loc-id="{{ loc.locationID }}">Solved</a></li>
              </ul>
          </details>
          
          </td>
        </tr>
        {% endfor %}
      </tbody>
    </table>
  </section>
</main>


<!-- Delete Confirmation Modal -->
<dialog id="deleteModal">
  <article>
    <header>
      <h3>Confirm Deletion</h3>
    </header>
    <p>Are you sure you want to delete this location?</p>
    <footer>
      <button type="button" class="secondary outline" onclick="closeDeleteModal()">Cancel</button>
      <button type="button" onclick="confirmDeletion()">Delete</button>
    </footer>
  </article>
</dialog>

<!-- Optional inline styles for smaller delete buttons and modal appearance -->
<style>
  .small-button {
    padding: 0.25rem 0.5rem;
    font-size: 0.9rem;
    line-height: 1;
  }
  dialog {
    border: none;
    border-radius: 0.5rem;
    box-shadow: 0 0 10px rgba(0,0,0,0.25);
  }
</style>

<!-- JavaScript to wire up the modal and send DELETE requests -->
<script>
  // Will hold the URL to send the DELETE request to.
  let currentDeleteUrl = null;
  const deleteModal = document.getElementById('deleteModal');

  // Attach event listeners to each delete button
  document.querySelectorAll('.delete-btn').forEach(function(button) {
    button.addEventListener('click', function(e) {
      e.preventDefault();
      // Grab the URL from the data attribute
      currentDeleteUrl = this.getAttribute('data-delete-url');
      deleteModal.showModal();
    });
  });

  function closeDeleteModal() {
    // Optionally add a closing animation here before closing.
    deleteModal.close();
    currentDeleteUrl = null;
  }

  function confirmDeletion() {
    if (!currentDeleteUrl) return;

    fetch(currentDeleteUrl, {
      method: 'DELETE',
      headers: {
        'Content-Type': 'application/json'
      }
    })
    .then(response => {
      if (response.ok) {
        // You might process response.json() if the server returns details.
        return response.json();
      } else {
        throw new Error('Deletion failed.');
      }
    })
    .then(data => {
      // For example, you could flash a message (or use data.flash_message)
      // and then reload the page to update the list:
      window.location.reload();
    })
    .catch(error => {
      //console.error('Error deleting location:', error);
      //alert('Failed to delete location.');
      // For now, the error message is being flashed when the page reloads.
      window.location.reload();
    });

    // Close the modal immediately.
    deleteModal.close();
  }

  // Calls the change status endpoint when a visit status is clicked
  document.addEventListener("DOMContentLoaded", function () {
      document.querySelectorAll(".change-status").forEach(function (item) {
          item.addEventListener("click", function (event) {
              event.preventDefault(); // Prevent default link behavior

              const locationID = this.getAttribute("data-loc-id");
              const newStatus = this.getAttribute("data-status");

              // Send a POST request to update the status
              fetch("/admin/change_discovery_status", {
                  method: "POST",
                  headers: {
                      "Content-Type": "application/json",
                      "X-Requested-With": "XMLHttpRequest",
                  },
                  body: JSON.stringify({
                      locationID: locationID,
                      status: newStatus,
                  }),
              })
              .then(response => {
                  if (!response.ok) {
                      throw new Error("Failed to update status.");
                  }
                  return response.json();
              })
              .then(data => {
                  console.log("Status updated:", data);
                  setTimeout(() => {
                      location.reload();
                  }, 3000); // Reload the page after 3 seconds
              })
              .catch(error => {
                  console.error("Error updating status:", error);
              });
          });
      });
  });



</script>
{% endblock %}